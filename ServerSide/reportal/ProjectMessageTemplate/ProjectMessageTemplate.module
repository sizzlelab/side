<?php

/**
 * @file
 * Provide message templates management for for research project
 */

/**
 * Implementation of hook_menu().
 */
function ProjectMessageTemplate_menu(){
    $menu['project/%/manage/message/templates'] = array(
        'title'             => t('Message templates'),
        'description'       => t('The display the list of message templates'),
        'page callback'     => 'project_manage_message_templates_callback',
        'page arguments'    => array(1),
        'access callback'   => 'manage_project_access',
        'access arguments'  => array(1),
        'type'              => MENU_CALLBACK,
    );
    $menu['project/%/manage/message/templates/add'] = array(
        'title'             => t('Add message template'),
        'description'       => t('Add new message template'),
        'page callback'     => 'project_manage_message_templates_add_callback',
        'page arguments'    => array(1),
        'access callback'   => 'manage_project_access',
        'access arguments'  => array(1),
        'type'              => MENU_CALLBACK,
    );
    $menu['project/%/manage/message/templates/view/%'] = array(
        'title'             => t('Message template'),
        'description'       => t('View message template'),
        'page callback'     => 'project_manage_message_templates_view_callback',
        'page arguments'    => array(1, 6),
        'access callback'   => 'manage_project_access',
        'access arguments'  => array(1),
        'type'              => MENU_CALLBACK,
    );
    $menu['project/%/manage/message/templates/edit/%'] = array(
        'title'             => t('Edit message template'),
        'description'       => t('Edit the message template'),
        'page callback'     => 'project_manage_message_templates_edit_callback',
        'page arguments'    => array(1, 6),
        'access callback'   => 'manage_project_access',
        'access arguments'  => array(1),
        'type'              => MENU_CALLBACK,
    );
    $menu['project/%/manage/message/templates/delete/%'] = array(
        'title'             => t('DELETE message template'),
        'description'       => t('DELETE the message template'),
        'page callback'     => 'project_manage_message_templates_delete_callback',
        'page arguments'    => array(1, 6),
        'access callback'   => 'manage_project_access',
        'access arguments'  => array(1),
        'type'              => MENU_CALLBACK,
    );
    
    //Ajax request
    $menu['project/%/manage/message/templates/get/%'] = array(
        'title'             => t('Get template'),
        'description'       => t('Get template content by id'),
        'page callback'     => 'ajax_project_manage_message_templates_get_callback',
        'page arguments'    => array(1, 6),
        'access callback'   => 'manage_project_access',
        'access arguments'  => array(1),
        'type'              => MENU_CALLBACK,
    );
    
    return $menu;
}

/**
 * Menu callback for project/%/manage/message/templates
 */
function project_manage_message_templates_callback($path){
    $project = prepare_project_manage_page($path);
    
    $breadcrumb = drupal_get_breadcrumb();
    $breadcrumb[] = l($project->name, generate_project_url($path));
    $breadcrumb[] = l(t('Manage'), generate_project_url($path).'/manage');
    $breadcrumb[] = l(t('Messages'), generate_project_url($path).'/manage/message');
    drupal_set_breadcrumb($breadcrumb);
    
    $project->path_category = 'manage';
    $project->path_category_subitem = 'messages'; 
    
    $content = '<p><a href="'.url("project/$path/manage/message/templates/add").'" class="add_link">Create new template</a></p>';
    $rows = array();
    $header = array(
        array('data'=>'Title', 'width'=>'100px'),
        array('data'=>'Type'),
        array('data'=>'Abstract', 'width'=>'400px'),
    );
        
    //get templates
    $sql = "SELECT id,  project, type, title, content FROM  {project_message_templates} WHERE project={$project->id} ORDER BY created DESC";
    $res = pager_query($sql, 30);
        
    while($row = db_fetch_object($res)){
        $rows[] = array(
            l($row->title, 'project/'.$path.'/manage/message/templates/edit/'.$row->id),
            $row->type,
            '<div>'.strip_tags(node_teaser($row->content, null, 400)).'</div>',
        );
    }
    
    $content.= theme_table($header, $rows);
    $content.= theme('pager');
    $project->subtitle = 'Message templates';
    $project->right_part = $content;    
    return theme('project_manage_page',$project);
}

/**
 * Menu callback for project/%/manage/message/templates/add
 */
function project_manage_message_templates_add_callback($path){
    $project = prepare_project_manage_page($path);
    
    $breadcrumb = drupal_get_breadcrumb();
    $breadcrumb[] = l($project->name, generate_project_url($path));
    $breadcrumb[] = l(t('Manage'), generate_project_url($path).'/manage');
    $breadcrumb[] = l(t('Messages'), generate_project_url($path).'/manage/message');
    $breadcrumb[] = l(t('Templates'), generate_project_url($path).'/manage/message/templates');
    drupal_set_breadcrumb($breadcrumb);
    
    $project->path_category = 'manage';
    $project->path_category_subitem = 'messages'; 
    
    $template = new stdClass;
    $template->project = $project->id;
    $project->subtitle = 'Add new template';
    $project->right_part = drupal_get_form('project_message_template_form', $template);
    return theme('project_manage_page',$project);
}

/**
 * Menu callback for project/%/manage/message/templates/view/%
 */
function project_manage_message_templates_view_callback($path, $tpl_id){
    
    
}

/**
 * Menu callback for project/%/manage/message/templates/edit/%
 */
function project_manage_message_templates_edit_callback($path, $tpl_id){
    $project = prepare_project_manage_page($path);
    
    $breadcrumb = drupal_get_breadcrumb();
    $breadcrumb[] = l($project->name, generate_project_url($path));
    $breadcrumb[] = l(t('Manage'), generate_project_url($path).'/manage');
    $breadcrumb[] = l(t('Messages'), generate_project_url($path).'/manage/message');
    $breadcrumb[] = l(t('Templates'), generate_project_url($path).'/manage/message/templates');
    drupal_set_breadcrumb($breadcrumb);
    
    $project->path_category = 'manage';
    $project->path_category_subitem = 'messages'; 
    
    //get template info
    $tpl = get_message_template_by_id($tpl_id);
    if($tpl->project==$project->id){
        $project->subtitle = 'Edit template';
        $project->right_part =  drupal_get_form('project_message_template_form', $tpl);
        return theme('project_manage_page',$project);
    }else{
        drupal_not_found();   
    }
}

/**
 * Menu callback for project/%/manage/message/templates/delete/%
 */
function project_manage_message_templates_delete_callback($path, $tpl_id){
    
}


/**
 * Menu callback for project/%/manage/message/templates/get/%
 */
function ajax_project_manage_message_templates_get_callback($path, $tpl_id){
    drupal_set_header('Content-Type: text/plain; charset: utf-8');
    
    $project = load_project($path);
    if($project){
        //get template info
        $tpl = get_message_template_by_id($tpl_id);
        if($tpl->project==$project->id){
            $result = (array) $tpl;
            print json_encode($result);
            exit;
        }
    }
    $result = array('error'=>'1', 'error_message'=>'No template be found.');
    print  json_encode($result);
    exit;
}

/** message template form **/
function project_message_template_form(&$form_state, $mTemplate=NULL){
    $form['id'] = array(
        '#type'         => 'hidden',
        '#value'        => isset($mTemplate->id)?$mTemplate->id:0,
    );
    $form['project'] = array(
        '#type'         => 'hidden',
        '#value'        => isset($mTemplate->project)?$mTemplate->project:0,
    );
    $options = array('email' => t('For email'), 'sms' => t('For SMS'));
    $form['type'] = array(
        '#type'         => 'radios',
        '#title'        => t('Template type'),
        '#default_value'=> isset($mTemplate->type)?$mTemplate->type:'email',
        '#options'      => $options,
        '#required'     => TRUE,
    );
    $form['title'] = array(
        '#type'         => 'textfield',
        '#title'        => t('Title'),
        '#default_value'=> isset($mTemplate->title)?$mTemplate->title:'',
        '#required'     => TRUE,
    );
    $form['content'] = array(
        '#type'         => 'textarea',
        '#title'        => t('Content'),
        '#default_value'=> isset($mTemplate->content)?$mTemplate->content:'',
        '#required'     => TRUE,
    );
    $form['submit'] = array(
        '#type'         => 'submit',
        '#value'        => t('Save'),
    );
    return $form;
}

function project_message_template_form_submit($form, &$form_state){
    $id = (int)$form_state['values']['id'];
    $project = $form_state['values']['project'];
    $type = $form_state['values']['type'];
    $title = $form_state['values']['title'];
    $content = $form_state['values']['content'];
    
    //remove html, php tags
    if($type=='sms'){
        $content = strip_tags($content);
    }
    
    if($id>0){
        //update
        $update = "UPDATE {project_message_templates} SET project=%d, type='%s', title='%s', content='%s', changed=NOW() WHERE id=%d";
        db_query($update, $project, $type, $title, $content, $id);
    }else{
        //insert
        $insert = "INSERT INTO {project_message_templates} (project, type, title, content, created, changed) VALUES(%d, '%s', '%s', '%s', NOW(), NOW())";
        db_query($insert, $project, $type, $title, $content);
    }
    
    $template = new stdClass;
    $template->id = $id;
    $template->project = $project;
    $template->type = $type;
    $template->title = $title;
    $template->content = $content;
    save_message_template($template);
    
    drupal_goto(get_project_url($project).'/manage/message/templates');
    
}
/** message teplate delete form **/
function project_message_template_delete_form(&$form_state, $mTemplate=NULL){
    
}
function project_message_template_delete_form_submit($form, &$form_state){
    
}

/**   Database handle **/
/**
 * get message template object by id
 * @param
 *   $id, the id of the template
 * @return
 *   message template object
 */
function get_message_template_by_id($id){
    $sql = "SELECT id,  project, type, title, content FROM  {project_message_templates} WHERE id=%d";
    return db_fetch_object(db_query($sql, $id));
    
}

/**
 * Get message templates options by type
 * @param
 *   $pid, the id of the project
 * @param
 *   $type, string, sms/email
 * @return
 *   Array
 */
function get_message_templates_options_by_type($pid, $type){
    $options = array();
    $options[0] = '--Select a template--';
    $sql = "SELECT id, title FROM  {project_message_templates} WHERE project=%d AND TYPE='%s' ORDER BY created";
    $res = db_query($sql, $pid, $type);
    while($row=db_fetch_object($res)){
        $options[$row->id] = $row->title;   
    }
    return $options; 
}

/**
 * Save template
 */
function save_message_template(&$template){
    if(isset($template->id) && $template->id > 0){
        //update
        $update = "UPDATE {project_message_templates} SET project=%d, type='%s', title='%s', content='%s', changed=NOW() WHERE id=%d";
        db_query($update, $template->project, $template->type, $template->title, $template->content, $template->id);
    }else{
        //insert
        $insert = "INSERT INTO {project_message_templates} (project, type, title, content, created, changed) VALUES(%d, '%s', '%s', '%s', NOW(), NOW())";
        db_query($insert, $template->project, $template->type, $template->title, $template->content);
        $template->id = mysql_insert_id(); 
    }
    return $template;
}