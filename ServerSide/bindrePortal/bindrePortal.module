<?php

/**
 * @file
 * Combine the rePortal system with SIDE project
 */

/**
 * Implemetation of hook_menu()
 */
function bindrePortal_menu(){
    
    /** admin pages **/
    $menus['admin/settings/reportal'] = array(
        'title' => t('rePortal settings'),
        'description' => t('Default templates for all projects.'),
        'page callback' => 'admin_settings_reportal_default_templates_callback',
        'access arguments' => array('administer site configuration'),
        'type' => MENU_NORMAL_ITEM,
        'file' => 'admin.pages.inc',
    );
    $menu['admin/settings/reportal/restore_templates'] = array(
        'title' => t('Restore templates'),
        'description' => t('Default templates for all projects.'),
        'page callback' => 'admin_settings_reportal_restore_templates_callback',
        'access arguments' => array('administer site configuration'),
        'type' => MENU_NORMAL_ITEM,
        'file' => 'admin.pages.inc',
    );
    
    /**  project pages **/
    //rewrite my projects page for researcher
    $menus['researcher/projects'] = array(
        'title' => t('Research projects'),
        'description' => t('List projects for researcher'),
        'page callback' => 'researcher_projects_callback',
        'access callback' => 'user_is_logged_in',
        'type' => MENU_CALLBACK,
        'file' => 'project.pages.inc',
    );
    //rewrite my projects page for participant
    $menus['person/projects'] = array(
        'title' => t('Participated projects'),
        'description' => t('List all projects the user has participated.'),
        'page callback' => 'person_projects_callback',
        'access callback' => 'user_is_logged_in',
        'type' => MENU_CALLBACK,
        'file' => 'project.pages.inc',
    );
    $menus['project/%/welcome'] = array(
        'title callback' => 'project_welcome_title_callback',
        'title arguments' => array(1),
        'description'       => t('Project management page for setting project info.'),
        'page callback' => 'project_welcome_page_callback',
        'page arguments' => array(1),
        'access callback' => 'project_participant_access',
        'access arguments' => array(1),
        'type' => MENU_CALLBACK,
        'file' => 'project.pages.inc',
    );
    
    return $menus;
}

/**
 * title callback for project/%/help
 */
function project_welcome_title_callback($path){
    $project = load_project($path);
    if($project){
        return 'Welcome to join '.$project->name.'!';
    }
}

/**
 * Implementation of hook_theme().
 */
function bindrePortal_theme(){
    return array(
        'project_welcome_page' => array(
	    'template' => 'project.welcome.page',
	    'arguments' => array(
		'project' => NULL,
	    ),
	),
        );
}

/**
 * Implementation of hook_create_project().
 */
function bindrePortal_create_project($project){
    //insert into research_project table
    $check = 'SELECT COUNT(*) FROM {research_project} WHERE idproject=%d';
    if(!db_result(db_query($check, $project->id))){
        $insert = 'INSERT INTO {research_project} (idproject, name, description) VALUES(%d, "%s", "%s")';
        db_query($insert, $project->id, $project->name, $project->introduction);
    }
    
    
    //bind physical activity tool
    $tool_id = variable_get('physical_activity_tool', null);
    if($tool_id){
        $insert = 'INSERT INTO {research_project_tools_list} (project, tool, created) VALUES(%d, %d, NOW())';
        db_query($insert, $project->id, $tool_id);
        
        //add default link
        $l_title1 = 'View my data';
        $l_url1 = url('person_chart');
        $l_weight1 = 1;
        $l_permission1 = 'PUBLIC';
        
        $add = 'INSERT INTO {research_project_tool_links}(project, tool, title, url, weight, permission, created, changed) VALUES(%d, %d, "%s", "%s", %d, "%s", NOW(), NOW())';
        db_query($add, $project->id, $tool_id, $l_title1, $l_url1, $l_weight1, $l_permission1);
    
        //add default link
        $l_title2 = 'View all data';
        $l_url2 = url('chart');
        $l_weight2 = 2;
        $l_permission2 = 'CONFIDENTIAL';
        db_query($add, $project->id, $tool_id, $l_title2, $l_url2, $l_weight2, $l_permission2);
    }
    
}

/**
 * Implementation of hook_project_join_new_participant().
 */
function bindrePortal_project_join_new_participant($pid, $uid){
    //check if user in the project or not
    $check = 'SELECT project_code FROM {project_code} WHERE idperson=%d AND idproject=%d';
    $code = db_result(db_query($check, $uid, $pid));
    if(!$code){
        $insert = 'INSERT INTO {project_code} (idperson, idproject) VALUES(%d , %d)';
        db_query($insert, $uid, $pid);
        $id = mysql_insert_id();
        
        //generate project code;
        $code = $id + 100000;
        $update = 'UPDATE {project_code} SET project_code ="%s" WHERE idprojectcode=%d';
        db_query($update, ''.$code, $id);
        
        $user = user_load($uid);
        if($user){
            send_project_code_email($pid, $user);
        }
    }
}

/**
 * Implementation of hook_project_participant_card_info($pid, $uid)
 */
function bindrePortal_project_participant_card_info($pid, $uid){
    
    if($uid>0){
        //get project code
        $get = 'SELECT project_code FROM {project_code} WHERE idperson=%d AND idproject=%d';
        $code = db_result(db_query($get, $uid, $pid));
        
        if($code){
            $card['project_code'] = array(
                'name' => t('Project code'),
                'value'=> $code,
                'weight' => 0,
            );
        }
    }
    return $card;
}

/**
 * Implementation of hook_project_message_templates_setting().
 */
function bindrePortal_project_message_templates_setting($project){
    $t = get_project_code_message_template($pid);
    if($t){
        $form['project-code-message'] = array(
            '#type' => 'fieldset',
            '#title' => t('Template for send project code'),
            '#collapsible' => TRUE,
            '#collapsed' => FALSE,
            '#weight' => 1,
        );
        $form['project-code-message']['project-code-template-id'] = array(
            '#type' => 'hidden',
            '#value'=> $t->id,
        );
        $form['project-code-message']['project-code-message-subject'] = array(
            '#type' => 'textfield',
            '#title'=> t('Subject'),
            '#default_value'=> $t->title,
            '#required' => TRUE,
        );
        $form['project-code-message']['project-code-message-body'] = array(
            '#type' => 'textarea',
            '#title'=> t('Content'),
            '#default_value'=> $t->content,
            '#required' => TRUE,
        );
        $form['available-variable'] = array(
            '#value' => '<div>'
                    .'<h3>Available variables</h3>'
                    .'ÔºÅproject_link : the full link to the project<br/>'
                    .'@project_name : the name of the project<br/>'
                    .'@username : the user name of the user this email sending to.<br/>'
                    .'@project_code : the project code<br/>'
                    .'!invite_link : the invite link for new user<br/>'
                    .'!app_downlowd_link: the link to download Physical Activity Hx<br/>'
                    .'!user_guide_link: the link to view User Guide of Get&Check<br/><br/>'
                    .'</div>',
            '#weight' => 19,
        );
    }
    return $form;
}

/**
 * Implementation of hook_project_message_templates_setting_validate().
 */
function bindrePortal_project_message_templates_setting_validate($project, $form, $form_state){
    $check = 'SELECT COUNT(*) FROM {project_message_templates} WHERE project=%d AND id=%d';
    $template = $form_state['values']['project-code-template-id'];
    if(db_result(db_query($check, $pid, $template))<=0){
         form_set_error('project-code-template-id', t('Invalid template id.'));
    }
}

/**
 * Implementation of hook_project_message_templates_setting_submit().
 */
function bindrePortal_project_message_templates_setting_submit($project, $form, $form_state){
    
    $t_id = $form_state['values']['project-code-template-id'];
    $subject = $form_state['values']['project-code-message-subject'];
    $body = $form_state['values']['project-code-message-body'];
    $template = get_message_template_by_id($t_id);
    
    $template->title = $subject;
    $template->content = $body;
    save_message_template($template);
    
}

/**
 * Implementation of hook_project_template_prepare_arguments($project, $to_user).
 */
function bindrePortal_project_template_prepare_arguments($project, $to_user=null){
    //get project code
    if($to_user){
        $project_code = get_project_code($project->id, $to_user->uid);
    }
    
    $arg = array(
        '!app_downlowd_link' => 'http://bit.ly/vIinjn',
        '!user_guide_link' => 'https://github.com/sizzlelab/side/blob/master/applications/Get&Check_User_guide.pdf?raw=true',
    );
    
    $arg['@project_code'] = $project_code;
    
    return $arg;
}

/**
 * Get project code message template
 * @param
 *   $pid, the id of the project
 */
function get_project_code_message_template($pid){
    $sql = 'SELECT t.id AS id,  m.id AS template, m.title AS title, m.content AS content, m.type AS type, m.created, m.changed '
          .'FROM {research_project_invitation_templates} AS t, {project_message_templates} AS m '
	  .'WHERE t.project=%d AND t.for_role="projectcode" AND m.id=t.template ORDER BY created DESC';
    $template = db_fetch_object(db_query($sql, $pid));
    if(!$template){
        $title = variable_get('default_template_for_send_project_code_subject','');
        $body = variable_get('default_template_for_send_project_code_body','');
        $template = new stdClass;
        $template->project = $pid;
        $template->type = 'email';
        $template->title = $title;
	$template->content = $body;
	save_message_template($template);
	set_invite_template_for($pid, $template->id, 'projectcode');
    }
    return $template;
}

/**
 * Send project code email
 */
function send_project_code_email($pid, $to_user){
    
    //prepare project code email
    $template = get_project_code_message_template($pid);
    $project = load_project($pid, 'id');
    
    $pair_value = prepare_arguments_for_default_template($project, $to_user);
    
    $subject = t($template->title, $pair_value);
    $body = t($template->content, $pair_value);
   
    //send project code mail
    message_send_http_mail($to_user->mail,$subject,$body);
    
}

/**
 * Reset global default project code template.
 */
function reset_global_projectcode_tempates(){
    $pc_message_subject = 'Welcome to join @project_name';
    variable_set('default_template_for_send_project_code_subject',$pc_message_subject);
    $pc_message_body = "<p>Hi,</P>"
                      ."<p>Welcome to join project @project_name.</P>"
                      ."<p>Your project account and project code for Physical Activity Hx are:</P>"
                      ."<br>Username: @username"
                      ."<br>Project code: @project_code</P>"
                      ."<p>Download the application:"
                      ."<br>!app_downlowd_link</P>"
                      ."<p>Follow the guide book here:"
                      ."<br>!user_guide_link</P>"
                      ."<p>View the project page here:"
                      ."<br>!project_link</P>"
                      ."<p>BR,"
                      ."<br>Get&Check project team</P>";
    variable_set('default_template_for_send_project_code_body',$pc_message_body);
}

